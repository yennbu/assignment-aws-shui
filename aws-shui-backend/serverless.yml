org: yenbur
service: note-board

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-north-1
  stage: dev
  iam:
    role: arn:aws:iam::506279660251:role/@test-role
  httpApi:
    cors: true

  environment:
    NOTES_TABLE: NotesTable
    BUCKET_NAME: yenbur-note-board

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - arn:aws:dynamodb:eu-north-1:506279660251:table/NotesTable
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
        - s3:DeleteObject
      Resource:
        - arn:aws:s3:::yenbur-note-board/*

functions:
  listNotes:
    handler: functions/getNotes/listNotes.handler
    events:
      - httpApi:
          path: /
          method: get
  getNotesForUser:
    handler: functions/getNotes/getNotesForUser.handler
    events:
      - httpApi:
          path: /notes/{userId}
          method: get
  createNote:
    handler: functions/createNote/createNote.handler
    events:
      - httpApi:
          path: /notes/{userId}
          method: post
  deleteNote:
    handler: functions/deleteNote/deleteNote.handler
    events:
      - httpApi:
          path: /notes/{userId}/{noteId}
          method: delete
  updateNote:
    handler: functions/updateNote/updateNote.handler
    events:
      - httpApi:
          path: /notes/{userId}/{noteId}
          method: put
  createUser:
    handler: users/createUser.handler
    events:
      - httpApi:
          path: /users
          method: post
  listUsers:
    handler: users/listUsers.handler
    events:
      - httpApi:
          path: /users
          method: get
  getUserById:
    handler: users/getUserById.handler
    events:
      - httpApi:
          path: /users/{userId}
          method: get
  userLogin:
    handler: users/userLogin.handler
    events:
      - httpApi:
          path: /login
          method: post

resources:
  Resources:
    NotesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: NotesTable
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
    MyBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: yenbur-note-board
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders:
                - '*'
              AllowedMethods:
                - GET
                - PUT
                - POST
                - DELETE
                - HEAD
              AllowedOrigins:
                - '*'
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true
        OwnershipControls:
          Rules:
            - ObjectOwnership: BucketOwnerEnforced